<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/jee 
    http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.2.xsd"
	default-lazy-init="false"
	default-autowire="byName">

	<description>Spring公共配置 </description>

	<context:annotation-config />
	<context:component-scan base-package="com.svw.lcms.framework" /> 
	<context:component-scan base-package="com.svw.lcms.common" />
	
	<bean id="SpringContextUtil" class="com.svw.lcms.utils.SpringContextUtil"
		lazy-init="false" />

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 数据库配置 -->
				<value>classpath*:/application.properties</value>
			</list>
		</property>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hiberante.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">25</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.configurationResourceName">ehcache.xml</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.svw.lcms.common.user.domain.SysUser</value>
				<value>com.svw.lcms.common.role.domain.SysRole</value>
				<value>com.svw.lcms.common.resources.domain.SysResource</value>
				<value>com.svw.lcms.common.dict.domain.SysDict</value>
				<value>com.svw.lcms.common.dict.domain.SysDictIdx</value> 
			</list>
		</property>
	</bean>
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"	proxy-target-class="true" />
	
	<!-- shiro -->
	<bean id="shiroService" class="com.svw.lcms.framework.realm.ShiroService">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.svw.lcms.framework.realm.CustomCredentialsMatcher">
	</bean>
	<!-- realm -->
	<bean id="realm" class="com.svw.lcms.framework.realm.Realm">
		<property name="shiroService" ref="shiroService"></property>
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm"></property>
	</bean>
	
	<!-- shiro 权限控制 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/welcome.do"></property>
		<property name="successUrl" value="/pages/login/welcomeaaa.do"></property>
		<property name="unauthorizedUrl" value="/pages/common/unauthorized.jsp"></property>
		<property name="filterChainDefinitions">
			<value>
				/js/** = anon
				/selectyze/** = anon
				/other/** = anon
				/image/** = anon
				/css/** = anon
				/zTree/** = anon
				/favicon.ico = anon
				/welcome.do = anon
 				/login.do = anon 
 				<!-- 其他链接必须授权 -->
				/** = authc
			</value>
		</property>
	</bean>

	<!-- 事务控制 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 对get/load/search开头的方法要求只读事务 -->
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<!-- 对其它方法要求事务 -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:pointcut id="bussinessService"
			expression="execution(* com.svw.lcms..services..*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>


	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor"
		scheduler="scheduler" />
	<!--基于@AspectJ切面的驱动器，如果没有这句话 切面的代码是不会执行的 -->
	<aop:aspectj-autoproxy /> 
     
     
</beans>